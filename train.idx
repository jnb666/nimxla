nimTitle	train	train.html	module nimxla/train		0
nim	Trainer	train.html#Trainer	object Trainer		11
nim	trainFunc	train.html#trainFunc,Client,Module,DataType,seq[int],proc(Node,Node)	proc trainFunc(c: Client; model: Module; dtype: DataType; shape: seq[int];\n          lossFn: proc (yp, y: Node): Node): Executable		42
nim	testFunc	train.html#testFunc,Client,Module,DataType,seq[int]	proc testFunc(c: Client; model: Module; dtype: DataType; shape: seq[int]): Executable		50
nim	accuracyFunc	train.html#accuracyFunc,Client,int,int	proc accuracyFunc(c: Client; batch, nout: int; outType = F32; labelType = I32): Executable		57
nim	trainEpoch	train.html#trainEpoch,Trainer,DataLoader	proc trainEpoch[T: ElemType](t: var Trainer; loader: var DataLoader): (float, float,\n    bool)		79
nim	getAccuracy	train.html#getAccuracy,Trainer,DataLoader	proc getAccuracy[T: ElemType](t: var Trainer; loader: var DataLoader): (float, bool)		110
nim	saveCheckpoint	train.html#saveCheckpoint,Trainer,string	proc saveCheckpoint(t: Trainer; basename: string)		146
nim	loadCheckpoint	train.html#loadCheckpoint,Trainer,string	proc loadCheckpoint(t: var Trainer; filename: string)		175
nim	readCheckpointFile	train.html#readCheckpointFile,string,string	proc readCheckpointFile(archiveFile, name: string): Stream		196
nim	statsPlots	train.html#statsPlots,Trainer,seq[string]	proc statsPlots(t: Trainer; classes: seq[string]): JsonNode		212
nim	getLayout	train.html#getLayout,int	proc getLayout(epochs: int): JsonNode		230
nim	trainNetwork	train.html#trainNetwork,Trainer,DataLoader,DataLoader,int,string,int	proc trainNetwork[T: ElemType](t: var Trainer; train, test: var DataLoader;\n                          epochs: int; plot = false; checkpoint = "";\n                          saveEvery = 20)		255
