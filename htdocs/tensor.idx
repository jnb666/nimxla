ElemTypeOrInt	tensor.html#ElemTypeOrInt	tensor: ElemTypeOrInt	
Tensor	tensor.html#Tensor	tensor: Tensor	
rawPtr	tensor.html#rawPtr,Tensor	tensor: rawPtr(t: Tensor): pointer	
len	tensor.html#len,Tensor	tensor: len(t: Tensor): int	
shape	tensor.html#shape,Tensor[T: ElemType]	tensor: shape[T: ElemType](t: Tensor[T]): Shape	
newTensor	tensor.html#newTensor,varargs[int]	tensor: newTensor[T: ElemType](dims: varargs[int]): Tensor[T]	
zeros	tensor.html#zeros,varargs[int]	tensor: zeros[T: ElemType](dims: varargs[int]): Tensor[T]	
fill	tensor.html#fill,openArray[int],T	tensor: fill[T: ElemType](dims: openArray[int]; value: T): Tensor[T]	
toTensor	tensor.html#toTensor,T	tensor: toTensor[T: ElemType](value: T): Tensor[T]	
toTensor	tensor.html#toTensor,openArray[T]	tensor: toTensor[T: ElemType](values: openArray[T]): Tensor[T]	
toTensor	tensor.html#toTensor,openArray[int]	tensor: toTensor(values: openArray[int]): Tensor[int64]	
toTensor	tensor.html#toTensor,HSlice[int,int]	tensor: toTensor[T: ElemType](slice: HSlice[int, int]): Tensor[T]	
`@@`	tensor.html#@@.m,untyped	tensor: `@@`(value: untyped): untyped	
`[]`	tensor.html#[],Tensor[T: ElemType],varargs[int]	tensor: `[]`[T: ElemType](t: Tensor[T]; ix: varargs[int]): T	
`[]=`	tensor.html#[]=,Tensor,varargs[int],T	tensor: `[]=`[T: ElemType](t: var Tensor; ix: varargs[int]; value: T)	
`==`	tensor.html#==,Tensor[T: ElemType],Tensor[T: ElemType]	tensor: `==`[T: ElemType](t1, t2: Tensor[T]): bool	
toSeq	tensor.html#toSeq,Tensor[T: ElemType]	tensor: toSeq[T: ElemType](t: Tensor[T]): seq[T]	
clone	tensor.html#clone,Tensor[T: ElemType]	tensor: clone[T: ElemType](t: Tensor[T]): Tensor[T]	
reshape	tensor.html#reshape,Tensor[T: ElemType],varargs[int]	tensor: reshape[T: ElemType](t: Tensor[T]; dims: varargs[int]): Tensor[T]	
setPrintOpts	tensor.html#setPrintOpts,int,int,int,int	tensor: setPrintOpts(minWidth = 8; precision = 6; floatMode = ffDefault;\n             threshold = 1000; edgeitems = 4)	
format	tensor.html#format,Tensor[T: ElemType]	tensor: format[T: ElemType](t: Tensor[T]): string	
`$`	tensor.html#$,Tensor[T: ElemType]	tensor: `$`[T: ElemType](t: Tensor[T]): string	
