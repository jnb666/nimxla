nimTitle	image	image.html	module nimxla/image		0
nim	Horizontal	image.html#Horizontal	Direction.Horizontal		12
nim	Vertical	image.html#Vertical	Direction.Vertical		12
nim	Direction	image.html#Direction	enum Direction		12
nim	Affine	image.html#Affine	ImageOpKind.Affine		14
nim	Flip	image.html#Flip	ImageOpKind.Flip		14
nim	Wrap	image.html#Wrap	ImageOpKind.Wrap		14
nim	Elastic	image.html#Elastic	ImageOpKind.Elastic		14
nim	ImageOpKind	image.html#ImageOpKind	enum ImageOpKind		14
nim	ImageOp	image.html#ImageOp	object ImageOp		16
nim	ImageRequest	image.html#ImageRequest	object ImageRequest		45
nim	TransContext	image.html#TransContext	object TransContext		50
nim	Transformer	image.html#Transformer	object Transformer		58
nim	randomFlip	image.html#randomFlip,Direction,float	proc randomFlip(direction: Direction; p = 0.5): ImageOp		89
nim	randomWrap	image.html#randomWrap,int,int,float	proc randomWrap(max_x, max_y: int; p = 0.5): ImageOp		93
nim	randomAffine	image.html#randomAffine,float,(float64, float64),float,float,float	proc randomAffine(rotate = 0.0; scale = (1.0, 1.0); transx = 0.0; transy = 0.0;\n             p = 0.5): ImageOp		99
nim	randomElastic	image.html#randomElastic,int,float,float,float	proc randomElastic(kernelSize = 9; stddev = 4.0; scale = 0.5; p = 0.5): ImageOp		105
nim	`$`	image.html#$,ImageOp	proc `$`(op: ImageOp): string		110
nim	`$`	image.html#$,Transformer	proc `$`(t: Transformer): string		125
nim	initTransformer	image.html#initTransformer,staticint,Rand,openArray[ImageOp],int	proc initTransformer(channels: static int; rng: var Rand; ops: openArray[ImageOp];\n                threads = 0): Transformer		283
nim	transform	image.html#transform,Transformer,Tensor[uint8]	proc transform(t: Transformer; arr: var Tensor[uint8])		301
nim	shutdown	image.html#shutdown,Transformer	proc shutdown(t: Transformer)		315
nimgrp	$	image.html#$-procs-all	proc		110
